<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:107%;
	font-size:14.0pt;
	font-family:"Times New Roman",serif;}
h1
	{mso-style-link:"Heading 1 Char";
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:12.0pt;
	margin-left:0in;
	line-height:107%;
	page-break-after:avoid;
	font-size:18.0pt;
	font-family:"Times New Roman",serif;
	color:black;
	font-weight:normal;}
a:link, span.MsoHyperlink
	{color:#0563C1;
	text-decoration:underline;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	line-height:107%;
	font-size:14.0pt;
	font-family:"Times New Roman",serif;}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	line-height:107%;
	font-size:14.0pt;
	font-family:"Times New Roman",serif;}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	line-height:107%;
	font-size:14.0pt;
	font-family:"Times New Roman",serif;}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	line-height:107%;
	font-size:14.0pt;
	font-family:"Times New Roman",serif;}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-link:"Heading 1";
	font-family:"Times New Roman",serif;
	color:black;}
.MsoChpDefault
	{font-family:"Calibri",sans-serif;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:107%;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body lang=EN-US link="#0563C1" vlink="#954F72" style='word-wrap:break-word'>

<div class=WordSection1>

<h1>JDElite Integration with Web Frameworks</h1>

<p class=MsoNormal>JDElite consists of a flowchart generator - JDLCore, along with plugins for support
	of different Web diagramming frameworks. The plugins translate the usersâ€™ format into the JDLCore
	internal input format. JDLCore generates the nodes layout and the edge routing to a JSON file in
	JDElite output format. This file has the full layout information with coordinates and can also be
	opened in the JDElite flowchart editor for visual inspection and further editing.</p>

<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-size:
16.0pt;line-height:107%'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%;font-weight: bold;'>Collaborating with React Flow - an example</span></p>

<p class=MsoNormal>The React Flow plugin uses the flowchart internal format of React Flow
	(https://reactflow.dev/docs). In this particular case the input 'position' data is ignored
	and all the remaining input data is translated and internally supplied to JDLCore. The result
	is a JSON file in JDElite output format. It contains the generated layout of the nodes and
	the routed links with all coordinates, along with references to the original elements in the
	input. The graphical informationin this output can further help the developers in their work
	with React Flow framework. That would be considerably useful for larger and more complex
	flowcharts. You can look at the React Flow input and JDElite output here:</p>

	<p class=MsoNormal>React Flow Input:</p>
	<div style="display: inline-flex">
		<div id="playDemo1">
			<input type="image" src="docOn.png" onclick="fnDemo11()" />
		</div>
		<div id="btnDemo1" style="visibility: hidden;">
			<input type="image" src="docOff.png" onclick="fnDemo12()" />
		</div>
	</div>
	<script>
		function fnDemo11() {
			document.getElementById("playDemo1").innerHTML =
					'<iframe id="ifrDemo1" src="reactFlowInput.txt" width="640" height="400" allowtransparency="true" allowfullscreen>';
			document.getElementById("btnDemo1").style.visibility = 'visible';
		}
		function fnDemo12() {
			document.getElementById("ifrDemo1").remove();
			document.getElementById("playDemo1").innerHTML = '<input type="image" src="docOn.png" onclick="fnDemo11()" />';
			document.getElementById("btnDemo1").style.visibility = 'hidden';
		}
	</script>

	<p class=MsoNormal>JDLCore Output:</p>
	<div style="display: inline-flex">
		<div id="playDemo2">
			<input type="image" src="docOn.png" onclick="fnDemo21()" />
		</div>
		<div id="btnDemo2" style="visibility: hidden;">
			<input type="image" src="docOff.png" onclick="fnDemo22()" />
		</div>
	</div>
	<script>
		function fnDemo21() {
			document.getElementById("playDemo2").innerHTML =
					'<iframe id="ifrDemo2" src="reactJDLOutput.txt" width="640" height="400" allowtransparency="true" allowfullscreen>';
			document.getElementById("btnDemo2").style.visibility = 'visible';
		}
		function fnDemo22() {
			document.getElementById("ifrDemo2").remove();
			document.getElementById("playDemo2").innerHTML = '<input type="image" src="docOn.png" onclick="fnDemo21()" />';
			document.getElementById("btnDemo2").style.visibility = 'hidden';
		}
	</script><p/><p/>

	<p class=MsoNormal>Flowchart in JDElite:</p>
	<img src="reactFlowchart.png" alt="React Flowchart" width="460" height="345"><p/>

	<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-size:
16.0pt;line-height:107%'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%;font-weight: bold;'>Angular</span></p>

<p class=MsoNormal>Work in progress: currently working to build an Angular custom
component, wrapping JDLCore for creating flowcharts and invoking JDElite editor for visualization and editing. </p>

	<p class=MsoNormal>&nbsp;</p>
	<p class=MsoNormal>&nbsp;</p>
	<p class=MsoNormal>&nbsp;</p>

</div>

</body>

</html>
